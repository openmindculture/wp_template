version: "3.9"

services:
  db:
    image: mysql:5.7
    restart: always
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  wordpress:
    depends_on:
      - db
    build:
      context: .
      dockerfile: docker/WordPress.Dockerfile
    ports:
      - "8000:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: "wp_"
      WORDPRESS_DEBUG: 1
      UPLOAD_LIMIT: 64M
    # shared volume
    volumes:
      - "./wp_data:/var/www/html"
      - "./themes:/var/www/html/wp-content/themes:rw"
      # increase allowed upload file size so that we can import shop data:
      - docker/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      # uncomment/modify the following line to plugin code available for local search/debugging:
      # - ./plugins/:/var/www/html/wp-content/plugins


  wordpress-cli:
    depends_on:
      - db
      - wordpress
    links:
      - db
    image: wordpress:cli
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: "wp_"
      WORDPRESS_DEBUG: 1
    command: []
    entrypoint: []
    # This is required to run wordpress-cli with the same
    # user-id as wordpress. This way there are no permission problems
    # when running the cli
    user: xfs
    # shared volume
    volumes:
      - "./wp_data:/var/www/html"
      - "./themes:/var/www/html/wp-content/themes:rw"

volumes:
  db_data:
  # shared volume
  wp_data:
